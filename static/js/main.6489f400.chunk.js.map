{"version":3,"sources":["actions/actionTypes.js","reducers/initialState.js","reducers/index.js","reducers/fontReducer.js","store/configureStore.js","components/loader/index.js","components/Editbar/Classification.js","api/config.js","api/index.js","actions/index.js","components/Editbar/Fontoptions/ColorPicker.js","components/Editbar/Fontoptions/FontSize.js","components/Editbar/Fontoptions/FontFamily.js","components/Editbar/Fontoptions/BackgroundColorPicker.js","components/Editbar/Fontoptions/index.js","components/Editbar/index.js","components/Result/inputArea.js","components/Result/choices.js","components/Result/HowToUse.js","components/Result/CodeBlock.js","components/Result/index.js","App.js","serviceWorker.js","index.js"],"names":["GET_ALL_FONTS_SUCCESS","GET_ALL_CATEGORIES_SUCCESS","CHANGE_FONTFAMILY_SUCCESS","CHANGE_FONTSIZE_SUCCESS","CHANGE_CATEGORY_SUCCESS","CHANGE_FONTCOLOR_SUCCESS","CHANGE_BACKGROUNDCOLOR_SUCCESS","GET_FONTS_REQUEST","GET_CATEGORIES_REQUEST","reducers_initialState","fonts","categories","fontFamily","fontSize","category","color","r","g","b","BackgroundColor","isFetching","isFetchingCategories","rootReducer","combineReducers","state","arguments","length","undefined","initialState","action","Object","assign","type","types","items","family","console","log","font","rgb","logger","createLogger","Loader","react_default","a","createElement","className","FontOptions","_ref","activeClassification","handleCategoryChange","listStyle","border","borderRadius","padding","display","justifyContent","width","marginBottom","cursor","textTransform","margin","style","flexWrap","components_loader","map","item","index","id","key","value","onClick","listItems","API_KEY","GoogleApi","Promise","resolve","fetch","then","res","json","data","uniqueCategories","toConsumableArray","Set","getAllFonts","dispatch","googleAPI","getAllFontsMock","getAllFontsSuccess","catch","error","getAllCategories","getAllCategoriesMock","getAllCategoriesSuccess","changeFontFamily","changeFontFamilySuccess","changeFontSize","changeFontSizeSuccess","changeCategory","changeCategorySuccess","changeFontColor","changeFontColorSuccess","changeBackgroundColor","changeBackgroundColorSuccess","ColorPicker","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnChange","e","actions","setState","displayColorPicker","bind","assertThisInitialized","handleOnClick","setWrapperRef","handleClickOutside","node","wrapperRef","document","addEventListener","removeEventListener","event","contains","target","_this$state","textAlign","fontWeight","background","height","ref","lib","onChange","React","Component","enhanceWithClickOutside","connect","ownProps","bindActionCreators","fontActions","FontSize","handleFontSizeChange","min","max","FontFamily","handleChangeFontFamily","defaultValue","getOptions","BackGroundColorPicker","body","backgroundColor","Fontoptions_FontFamily","Fontoptions_FontSize","Fontoptions_ColorPicker","BackgroundColorPicker","App","link","rel","href","concat","replace","head","appendChild","handleFontColorChange","fontColor","handleOnClickColorChange","_this2","Editbar_Classification","Fontoptions","filter","loading","Result","handleChange","inputValue","resize","outline","FormGroup_default","name","placeholder","Choices","appearance","displayCode","CodeBlock","handleOnCopy","copied","css","codeSnippetStyle","paddingBottom","paddingTop","paddingLeft","paddingRight","marginTop","react_copy_to_clipboard_lib_default","text","onCopy","float","notifyUser","choices","inputArea","HowToUse","Result_CodeBlock","components_Result","Editbar","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","unsubscribe","subscribe","getState","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6489f400.chunk.js","sourcesContent":["export const GET_ALL_FONTS_SUCCESS = 'GET_ALL_FONTS_SUCCESS';\r\nexport const GET_ALL_CATEGORIES_SUCCESS = 'GET_ALL_CATEGORIES_SUCCESS';\r\n\r\nexport const CHANGE_FONTFAMILY_SUCCESS = 'CHANGE_FONTFAMILY_SUCCESS';\r\nexport const CHANGE_FONTSIZE_SUCCESS = 'CHANGE_FONTSIZE_SUCCESS';\r\nexport const CHANGE_CATEGORY_SUCCESS = 'CHANGE_CATEGORY_SUCCESS';\r\nexport const CHANGE_FONTCOLOR_SUCCESS = 'CHANGE_FONTCOLOR_SUCCESS';\r\nexport const CHANGE_BACKGROUNDCOLOR_SUCCESS = 'CHANGE_BACKGROUNDCOLOR_SUCCESS';\r\n\r\nexport const GET_FONTS_REQUEST = 'GET_FONTS_REQUEST';\r\nexport const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\r\n","export default {\r\n    fonts: [],\r\n    categories: [],\r\n    fontFamily: '',\r\n    fontSize: '25',\r\n    category: '',\r\n    color: {\r\n        r: '',\r\n        g: '',\r\n        b: ''\r\n    },\r\n    BackgroundColor: {\r\n        r: '',\r\n        g: '',\r\n        b: ''\r\n    },\r\n    isFetching: false,\r\n    isFetchingCategories: false\r\n};","import { combineReducers } from 'redux';\r\nimport fonts from './fontReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  fonts\r\n  });\r\n  \r\n  export default rootReducer;","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default function columnReducer(state = initialState, action) {\r\n    state = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case types.GET_FONTS_REQUEST:\r\n            state.isFetching = true;\r\n            return state;\r\n        case types.GET_CATEGORIES_REQUEST:\r\n            state.isFetchingCategories = true;\r\n            return state;\r\n        case types.GET_ALL_FONTS_SUCCESS:\r\n            state.fonts = action.fonts.items;\r\n            state.fontFamily = action.fonts.items[0].family;\r\n            state.category = action.fonts.items[0].category;\r\n            state.isFetching = false;\r\n            console.log('..stop fetching');\r\n            return state;\r\n        case types.GET_ALL_CATEGORIES_SUCCESS:\r\n            state.categories = action.categories;\r\n            state.isFetchingCategories = false;\r\n            return state;\r\n        case types.CHANGE_FONTFAMILY_SUCCESS: \r\n            state.fontFamily = action.font;\r\n            return state;\r\n        case types.CHANGE_FONTSIZE_SUCCESS: \r\n            state.fontSize = action.fontSize;\r\n            return state;\r\n        case types.CHANGE_CATEGORY_SUCCESS:\r\n            state.category = action.category;\r\n            return state;\r\n        case types.CHANGE_FONTCOLOR_SUCCESS:\r\n            state.color = action.rgb;\r\n            return state;\r\n        case types.CHANGE_BACKGROUNDCOLOR_SUCCESS:\r\n            state.BackgroundColor = action.rgb;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst logger = createLogger();\r\nexport default function configureStore(initialState) {\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(thunk, reduxImmutableStateInvariant(), logger)\r\n    );\r\n}","import React from 'react';\r\nimport './loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './Classification.css'\r\nimport Loader from '../loader';\r\n\r\n\r\nconst FontOptions = ({ activeClassification, categories, handleCategoryChange, isFetching }) => {\r\n    const style = {\r\n        display: 'flex',\r\n        width: '100%',\r\n        flexWrap: 'wrap',\r\n        padding: '0px'\r\n    }\r\n\r\n    const listStyle = {\r\n        border: '3px solid #ffdf01',\r\n        borderRadius: '3px',\r\n        padding: '4px 5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100px',\r\n        marginBottom: '10px',\r\n        cursor: 'pointer',\r\n        textTransform: 'capitalize',\r\n        margin: '5px',\r\n\r\n    }\r\n\r\n    const listItems = (categories) => {\r\n        return (categories.map((item, index) => {\r\n            return (\r\n                <li\r\n                    id={item}\r\n                    style={listStyle}\r\n                    key={index}\r\n                    value={item}\r\n                    className={activeClassification === item ? 'active' : ''}\r\n                    onClick={handleCategoryChange}\r\n                >\r\n                    {item}\r\n                </li>);\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>\r\n                Classification\r\n            </h4>\r\n            <ul style={style}>\r\n    {isFetching ? <Loader /> : listItems(categories)  }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FontOptions;\r\n","export const API_KEY = 'AIzaSyACULpszbWYoo4wwRxSfaZKu3T2GEcsC-Q';","import { API_KEY }  from  './config';\r\n\r\nclass GoogleApi {\r\n\r\n    static getAllFontsMock() {\r\n        return new Promise((resolve) => {\r\n            fetch('https://www.googleapis.com/webfonts/v1/webfonts?key=' + API_KEY)\r\n            .then(res => res.json())\r\n            .then(data => resolve(Object.assign([], data)));\r\n        });\r\n    }\r\n\r\n    static getAllCategoriesMock() {\r\n            return new Promise((resolve) => {\r\n                fetch('https://www.googleapis.com/webfonts/v1/webfonts?key=' + API_KEY)\r\n                .then(res => res.json())\r\n                .then(data => { \r\n                    const categories = data.items.map((font) => {\r\n                        return font.category;\r\n                    });\r\n                    var uniqueCategories = [...new Set(categories)];\r\n                    resolve(Object.assign([], uniqueCategories))\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport default GoogleApi;","import * as types from './actionTypes';\r\nimport googleAPI from '../api';\r\n\r\n\r\nfunction getAllFontsSuccess(fonts) {\r\n    return { type: types.GET_ALL_FONTS_SUCCESS, fonts };\r\n}\r\n\r\nfunction getAllfontsRequest() {\r\n    return {type: types.GET_FONTS_REQUEST};\r\n}\r\n\r\nexport function getAllFonts() {\r\n    return function (dispatch) {\r\n        dispatch(getAllfontsRequest());\r\n        return googleAPI.getAllFontsMock().then((fonts) => {\r\n            dispatch(getAllFontsSuccess(fonts));\r\n        }).catch(error => {\r\n            throw (error);\r\n        });\r\n    };\r\n}\r\n\r\nfunction getAllCategoriesSuccess(categories) {\r\n    return { type: types.GET_ALL_CATEGORIES_SUCCESS, categories };\r\n}\r\n\r\nfunction getAllCategoriesRequest() {\r\n    return {type: types.GET_CATEGORIES_REQUEST};\r\n}\r\nexport function getAllCategories() {\r\n    return function (dispatch) {\r\n        dispatch(getAllCategoriesRequest());\r\n        return googleAPI.getAllCategoriesMock().then((categories) => {\r\n            dispatch(getAllCategoriesSuccess(categories));\r\n        }).catch(error => {\r\n            throw (error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeFontFamilySuccess(font) {\r\n    return { type: types.CHANGE_FONTFAMILY_SUCCESS, font };\r\n}\r\n\r\nexport function changeFontFamily(font) {\r\n    return function (dispatch) {\r\n        return dispatch(changeFontFamilySuccess(font));\r\n    };\r\n}\r\n\r\nfunction changeFontSizeSuccess(fontSize) {\r\n    return { type: types.CHANGE_FONTSIZE_SUCCESS, fontSize };\r\n}\r\n\r\nexport function changeFontSize(fontSize) {\r\n    return function (dispatch) {\r\n        return dispatch(changeFontSizeSuccess(fontSize));\r\n    };\r\n}\r\n\r\nfunction changeCategorySuccess(category) {\r\n        return { type: types.CHANGE_CATEGORY_SUCCESS, category };\r\n}\r\n\r\nexport function changeCategory(category) {\r\n    return function (dispatch) {\r\n        return dispatch(changeCategorySuccess(category));\r\n    }\r\n}\r\n\r\nfunction changeFontColorSuccess(rgb) {\r\n    return { type: types.CHANGE_FONTCOLOR_SUCCESS, rgb};\r\n}\r\n\r\nexport function changeFontColor(rgb) {\r\n    return function (dispatch) {\r\n        return dispatch(changeFontColorSuccess(rgb));\r\n    }\r\n}\r\n\r\nfunction changeBackgroundColorSuccess(rgb) {\r\n    return { type: types.CHANGE_BACKGROUNDCOLOR_SUCCESS, rgb };\r\n}\r\n\r\nexport function changeBackgroundColor(rgb) {\r\n    return function (dispatch) {\r\n        return dispatch(changeBackgroundColorSuccess(rgb));\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../../actions';\r\nimport { SketchPicker } from 'react-color';\r\nimport enhanceWithClickOutside from 'react-click-outside';\r\n\r\nclass ColorPicker extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            color: {\r\n                r: this.props.fonts.color.r,\r\n                g: this.props.fonts.color.g,\r\n                b: this.props.fonts.color.r\r\n            },\r\n            displayColorPicker: false\r\n        }\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.props.actions.changeFontColor({ r: e.rgb.r, g: e.rgb.g, b: e.rgb.b });\r\n        this.setState({ color: { r: e.rgb.r, g: e.rgb.g, b: e.rgb.b } });\r\n    }\r\n\r\n    handleOnClick() {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.state.displayColorPicker && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { color, displayColorPicker } = this.state;\r\n\r\n        const style = {\r\n            textAlign: 'center',\r\n            fontSize: '18px',\r\n            fontWeight: '700',\r\n            padding: '5px',\r\n            background: '#fff',\r\n            borderRadius: '4px',\r\n            height: '36px',\r\n            width: '45px',\r\n            border: '1px solid rgba(0,0,0,.1)',\r\n            display: 'inline-block',\r\n            cursor: 'pointer',\r\n            color: 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')' \r\n        }\r\n        return (\r\n            <div>\r\n                    <div>\r\n                        <div>\r\n                            <label>\r\n                                TEXT COLOR\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <div onClick={this.handleOnClick} >\r\n                                <span style={style} >A</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {displayColorPicker ?\r\n                    <div ref={this.setWrapperRef} className=\"ColorPicker__Popover\">\r\n                        <SketchPicker color={color} onChange={this.handleOnChange} />\r\n                    </div> :null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        fonts: state.fonts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(fontActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default enhanceWithClickOutside(connect(mapStateToProps, mapDispatchToProps)(ColorPicker));\r\n","import React from 'react';\r\n\r\nconst FontSize = ({ handleFontSizeChange, fontSize }) => {\r\n\r\n    const style = {\r\n        textAlign: 'center',\r\n        padding: '5px',\r\n        background: '#fff',\r\n        borderRadius: '4px',\r\n        height: '36px',\r\n        width: '45px',\r\n        border: '1px solid rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>\r\n                    FONT SIZE\r\n                    </label>\r\n            </div>\r\n            <div>\r\n                <input style={style} type=\"number\" min=\"9\" max=\"248\" value={fontSize} onChange={handleFontSizeChange} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FontSize;\r\n","import React from 'react';\r\nimport Loader from '../../loader'\r\nconst FontFamily = ({ handleChangeFontFamily, state, fonts, isFetchingCategories }) => {\r\n\r\n    const getOptions = (fonts) => {\r\n        return fonts.map((font) => {\r\n            return (\r\n                <option key={font.family} value={font.family}> {font.family} </option>\r\n            );\r\n        });\r\n    }\r\n\r\n    const style = {\r\n        textAlign: 'center',\r\n        padding: '5px',\r\n        background: '#fff',\r\n        borderRadius: '4px',\r\n        height: '36px',\r\n        border: '1px solid rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>\r\n                    Font-family\r\n                </label>\r\n            </div>\r\n            <div>{isFetchingCategories ? <Loader /> :\r\n                <select style={style} value={state.fontFamily} id=\"fontFamily\" onChange={handleChangeFontFamily}>\r\n                    <option defaultValue> - Select - </option>\r\n                    {getOptions(fonts)}\r\n                </select>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FontFamily;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../../actions';\r\nimport { SketchPicker } from 'react-color';\r\nimport enhanceWithClickOutside from 'react-click-outside';\r\n\r\nclass BackGroundColorPicker extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            BackgroundColor: {\r\n                r: this.props.fonts.BackgroundColor.r,\r\n                g: this.props.fonts.BackgroundColor.g,\r\n                b: this.props.fonts.BackgroundColor.r\r\n            }\r\n        }\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.props.actions.changeBackgroundColor({ r: e.rgb.r, g: e.rgb.g, b: e.rgb.b });\r\n        document.body.style.backgroundColor = 'rgb(' + e.rgb.r + ',' + e.rgb.g + ',' + e.rgb.b + ')'\r\n        this.setState({ BackgroundColor: { r: e.rgb.r, g: e.rgb.g, b: e.rgb.b } });\r\n    }\r\n\r\n    handleOnClick() {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.state.displayColorPicker && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { BackgroundColor, displayColorPicker } = this.state;\r\n\r\n        const style = {\r\n            textAlign: 'center',\r\n            fontSize: '18px',\r\n            fontWeight: '700',\r\n            padding: '5px',\r\n            background: 'rgb(' + BackgroundColor.r + ',' + BackgroundColor.g + ',' + BackgroundColor.b + ')',\r\n            borderRadius: '4px',\r\n            height: '36px',\r\n            width: '45px',\r\n            border: '1px solid rgba(0,0,0,.1)',\r\n            display: 'inline-block',\r\n            cursor: 'pointer'\r\n        }\r\n        return (\r\n            <div>\r\n                    <div>\r\n                        <div>\r\n                            <label>\r\n                                BACKGROUND COLOR\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <div onClick={this.handleOnClick} >\r\n                                <span style={style} ></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {displayColorPicker ?\r\n                    <div ref={this.setWrapperRef} className=\"ColorPicker__Popover\">\r\n                        <SketchPicker color={BackgroundColor} onChange={this.handleOnChange} />\r\n                    </div> :null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        fonts: state.fonts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(fontActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default enhanceWithClickOutside(connect(mapStateToProps, mapDispatchToProps)(BackGroundColorPicker));\r\n","import React from 'react';\r\nimport ColorPicker from './ColorPicker';\r\nimport FontSize from './FontSize';\r\nimport FontFamily from './FontFamily';\r\nimport BackgroundColorPicker from './BackgroundColorPicker';\r\n\r\nconst FontOptions = ({ handleChangeFontFamily, handleFontSizeChange, state, fonts, fontSize, isFetchingCategories }) => {\r\n    return (\r\n        <div>\r\n            <h4>\r\n                Propeties\r\n            </h4>\r\n            <FontFamily handleChangeFontFamily={handleChangeFontFamily} state={state} fonts={fonts} isFetchingCategories={isFetchingCategories} />\r\n            <FontSize handleFontSizeChange={handleFontSizeChange} fontSize={fontSize} />\r\n            <ColorPicker />\r\n            <BackgroundColorPicker />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FontOptions;\r\n","import React from 'react';\r\nimport Classification from './Classification';\r\nimport FontOptions from './Fontoptions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../actions';\r\n\r\nclass App extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      activeClassification: '',\r\n      categories: this.props.categories,\r\n      fontFamily: this.props.fonts.fontFamily,\r\n      category: this.props.fonts.category,\r\n      fonts: this.props.fonts.fonts,\r\n      fontSize: this.props.fonts.fontSize,\r\n      displayColorPicker: true\r\n    }\r\n    this.handleChangeFontFamily = this.handleChangeFontFamily.bind(this);\r\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\r\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\r\n    this.handleFontColorChange = this.handleFontColorChange.bind(this);\r\n    this.handleOnClickColorChange = this.handleOnClickColorChange.bind(this);\r\n  }\r\n\r\n  handleChangeFontFamily = (e) => {\r\n    this.props.actions.changeFontFamily(e.target.value);\r\n    this.setState({ fontFamily: e.target.value });\r\n    var link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = `https://fonts.googleapis.com/css?family=${e.target.value.replace(/\\s/g, \"+\")}`;\r\n    document.head.appendChild(link);\r\n  }\r\n\r\n  handleCategoryChange = (e) => {\r\n    if (this.state.activeClassification !== e.target.id) {\r\n      this.setState({ activeClassification: e.target.id });\r\n      this.props.actions.changeCategory(e.target.id);\r\n    } else {\r\n      this.setState({ activeClassification: '' });\r\n      this.props.actions.changeCategory('');\r\n    }\r\n  }\r\n\r\n  handleFontSizeChange = (e) => {\r\n    this.setState({ fontSize: e.target.value })\r\n    this.props.actions.changeFontSize(e.target.value);\r\n  }\r\n\r\n  handleFontColorChange = (e) => {\r\n    this.setState({ fontColor: { r: '', g: '', b: '' } })\r\n  }\r\n\r\n  handleOnClickColorChange = (e) => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker});\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      padding: '10px',\r\n      backgroundColor: 'rgba(222, 226, 232, 0.2)'\r\n    }\r\n    return (\r\n\r\n      <div style={style}>\r\n        <section>\r\n          <Classification\r\n            activeClassification={this.state.activeClassification}\r\n            fonts={this.props.fonts}\r\n            categories={this.props.fonts.categories}\r\n            handleCategoryChange={this.handleCategoryChange}\r\n            isFetching={this.props.fonts.isFetching}\r\n          />\r\n        </section>\r\n        <section>\r\n          <FontOptions\r\n            isFetchingCategories={this.props.fonts.isFetchingCategories}\r\n            handleChangeFontFamily={this.handleChangeFontFamily}\r\n            handleFontSizeChange={this.handleFontSizeChange}\r\n            handleFontColorChange={this.handleFontColorChange}\r\n            displayColorPicker={this.state.displayColorPicker}\r\n            handleOnClickColorChange={this.handleOnClickColorChange}\r\n            state={this.state}\r\n            fontSize={this.state.fontSize}\r\n            fonts={this.state.activeClassification ? this.props.fonts.fonts.filter((font) => font.category === this.state.activeClassification) : this.props.fonts.fonts}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    fonts: state.fonts,\r\n    loading: state.loading\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(fontActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\n\r\nconst Result = ({ handleChange, inputValue, fontSize, fontFamily, color}) => {\r\n\r\n    const style = {\r\n        fontSize: fontSize + 'px',\r\n        fontFamily: fontFamily,\r\n        color: 'rgb(' + color.r + ',' + color.g +  ',' + color.b +')',\r\n        resize: 'none',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '140px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup >\r\n                <textarea\r\n                    style={style}\r\n                    name=\"inputText\"\r\n                    onChange={handleChange}\r\n                    value={inputValue}\r\n                    placeholder=\"Type something\"\r\n                    color= {'rgb(' + color.r + ',' + color.g +  ',' + color.b +')'}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\n\r\nconst Choices = ({ fontSize, fontFamily, category }) => {\r\n    const style = {\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        padding: '0px'\r\n\r\n    }\r\n\r\n    const listStyle = {\r\n        fontSize : '15px',\r\n        textTransform: 'capitalize'\r\n\r\n    }\r\n\r\n    const listItems = () => {\r\n        const items = [fontFamily, fontSize, category];\r\n        return (items.map((item, index) => {\r\n            return (\r\n            <li style={listStyle} key={index} >\r\n                {item} {index < 2 ? '|' : ''} &nbsp; \r\n            </li>);\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <ul style={style}>\r\n            {listItems()}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Choices;\r\n","\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../actions';\r\n\r\nclass Result extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            inputValue: '',\r\n            fontFamily: this.props.fonts.fontFamily,\r\n            fontSize: this.props.fonts.fontSize,\r\n            category: this.props.fonts.category\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ inputValue: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const buttonStyle = {\r\n            backgroundColor: 'rgb(255, 223, 1)',\r\n            appearance: 'none',\r\n            background: '#ffdf01',\r\n            borderRadius: '3px',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            fontSize: '13px',\r\n            padding: '6px 10px',\r\n        }\r\n\r\n        \r\n        return (\r\n            <div style={{ textAlign: 'right' }}>\r\n                <button style={buttonStyle} onClick={this.props.displayCode}>\r\n               <b>How to use {'</>'}</b>  \r\n            </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        fonts: state.fonts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(fontActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n","import React from 'react';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../actions';\r\n\r\nclass CodeBlock extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            link: `<link href=\"https://fonts.googleapis.com/css?family=\"${this.props.fonts.fontFamily.replace(/\\s/g, \"+\")}\" rel=\"stylesheet\">`,\r\n            copied: false,\r\n            css: `font-family: ${this.props.fontFamily}, sans-serif;`\r\n\r\n        };\r\n        this.handleOnCopy = this.handleOnCopy.bind(this);\r\n    }\r\n    handleOnCopy = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const codeBlockStyle = {\r\n            backgroundColor: 'rgb(222, 226, 232, 0.2)',\r\n            padding: '10px',\r\n            marginTop: '10px'\r\n        }\r\n\r\n        const codeSnippetStyle = {\r\n            backgroundColor: 'hsla(55,16%,86%,.6)',\r\n            paddingBottom: '15px',\r\n            paddingTop: '15px',\r\n            paddingLeft: '10px',\r\n            paddingRight: '10px'\r\n        }\r\n\r\n        return (\r\n            <div style={codeBlockStyle} >\r\n                <h5>Embed Font</h5>\r\n                <p>To embed your selected fonts into a webpage, copy this code into the {'<head>'} of your HTML document.</p>\r\n                <div style={codeSnippetStyle} className=\"mt-1\">\r\n                    <span>{this.state.link}</span>\r\n\r\n                    <CopyToClipboard text={this.state.link}\r\n                        onCopy={() => this.handleOnCopy}\r\n                    >\r\n                        <span style={{\r\n                            float: 'right',\r\n                            padding: '4px',\r\n                            border: '1px solid #212529',\r\n                            fontSize: '10px',\r\n                            borderRadius: '2px',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                            className=\"glyphicon glyphicon-floppy-disk\"\r\n                            onClick={() => this.notifyUser}>\r\n                        </span>\r\n                    </CopyToClipboard>\r\n                </div>\r\n                <h5 className=\"mt-3\">Specify in CSS</h5>\r\n                <p>Use the following CSS rules to specify these families:</p>\r\n                <div style={codeSnippetStyle}>\r\n                    <span>{this.state.css}</span>\r\n\r\n                    <CopyToClipboard text={this.state.css}\r\n                        onCopy={() => this.handleOnCopy}\r\n                    >\r\n                        <span style={{\r\n                            float: 'right',\r\n                            padding: '4px',\r\n                            border: '1px solid #212529',\r\n                            fontSize: '10px',\r\n                            borderRadius: '2px',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                            className=\"glyphicon glyphicon-floppy-disk\"\r\n                            onClick={() => this.notifyUser}>\r\n                        </span>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        fonts: state.fonts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(fontActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeBlock);\r\n\r\n","import React from 'react';\r\nimport InputArea from './inputArea';\r\nimport Choices from './choices';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as fontActions from '../../actions';\r\nimport HowToUse from './HowToUse.js'\r\nimport CodeBlock from './CodeBlock';\r\n\r\nclass Result extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            inputValue: '',\r\n            fontFamily: this.props.fonts.fontFamily,\r\n            fontSize: this.props.fonts.fontSize,\r\n            category: this.props.fonts.category,\r\n            displayCode: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.displayCode = this.displayCode.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ inputValue: e.target.value })\r\n    }\r\n\r\n    displayCode = (e) => {\r\n        this.setState({ displayCode: !this.state.displayCode });\r\n    }\r\n\r\n\r\n    render() {\r\n        const style = {\r\n            backgroundColor: 'rgb(222, 226, 232, 0.2)',\r\n            padding: '10px',\r\n            height: '250px'\r\n        }\r\n\r\n        return (<div>\r\n\r\n\r\n            <div style={style}>\r\n                <div>\r\n                    <Choices\r\n                        fontSize={this.props.fonts.fontSize}\r\n                        fontFamily={this.props.fonts.fontFamily}\r\n                        category={this.props.fonts.category}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <InputArea\r\n                        handleChange={this.handleChange}\r\n                        fontSize={this.props.fonts.fontSize}\r\n                        fontFamily={this.props.fonts.fontFamily}\r\n                        inputValue={this.state.inputValue}\r\n                        color={this.props.fonts.color}\r\n                    />\r\n                </div>\r\n                <HowToUse displayCode={this.displayCode} />\r\n            </div>\r\n\r\n            {this.state.displayCode ?\r\n                <CodeBlock fontFamily={this.props.fonts.fontFamily}/>\r\n            : null}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        fonts: state.fonts\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(fontActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n","import React from 'react';\nimport Editbar from './components/Editbar';\nimport Result from './components/Result';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <Result\n            fonts={this.props.fonts}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Editbar\n              fonts={this.props.fonts}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n\treturn {\n    fonts: state.fonts\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { getAllFonts, getAllCategories } from './actions';\nconst store = configureStore();\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\nstore.dispatch(getAllFonts());\nstore.dispatch(getAllCategories());\nunsubscribe();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}